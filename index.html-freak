<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <!-- <meta name="viewport" content="width=device-width, initial-scale=1.0"> -->
    <title>OPIC3D Live - Camera Capture and Render</title>
    <meta charset="utf-8">

    <meta name="viewport" content="width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0, shrink-to-fit=no">
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

    <link href="https://vjs.zencdn.net/7.10.2/video-js.css" rel="stylesheet">
    <link href="videojs-vr.css" rel="stylesheet">
    <!-- <style>
        #localVideo {
            transform: scaleX(-1);
        }
    </style> -->
    <style>
        html, body, iframe {
          width: 100%;
          height: 100%;
          background-color: #000;
          color: #fff;
          margin: 0px;
          border: 0px;
          padding: 0;
          overflow: hidden;
    }
</style>

</head>

<body>

    <select id="camera-list"></select>
    <button id="start-camera">Start Camera</button>
    <!-- <video id="localVideo" autoplay muted playsinline width="640" height="480"></video> -->
    <video id="localVideo" class="video-js vjs-default-skin" controls playsinline autoplay width="320" height="240"></video>

    <h3>Rendered in Video.js</h3>
    <video id="outputVideo" class="video-js vjs-default-skin" controls width="640" height="360"></video>

    <script src="https://vjs.zencdn.net/7.10.2/video.js"></script>
    <!-- Video.js VR script -->
    <script src="https://unpkg.com/videojs-vr@2.0.0/dist/videojs-vr.js"></script>
    <script src="index.js"></script>
<script>
  var iframe = document.createElement('iframe');
  iframe.src = 'index.html';
  iframe.width = '100%';
  iframe.height = '100%';
  iframe.setAttribute('allow', 'gyroscope; accelerometer');
  document.body.appendChild(iframe);

  // iOS, cross-origin iframes cannot access devicemotion events, so the parent
  // page must pass them via postMessage, which the CardboardVRDisplay
  // handles
  if (isIOS()) {
    window.addEventListener('devicemotion', function(e) {
      iframe.contentWindow.postMessage({
        type: 'devicemotion',
        deviceMotionEvent: cloneDeviceMotionEvent(e),
      }, '*');
    });
  }

  function isIOS() {
    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
  }

  function cloneDeviceMotionEvent(e) {
    return {
      acceleration: {
        x: e.acceleration.x,
        y: e.acceleration.y,
        z: e.acceleration.z,
      },
      accelerationIncludingGravity: {
        x: e.accelerationIncludingGravity.x,
        y: e.accelerationIncludingGravity.y,
        z: e.accelerationIncludingGravity.z,
      },
      rotationRate: {
        alpha: e.rotationRate.alpha,
        beta: e.rotationRate.beta,
        gamma: e.rotationRate.gamma,
      },
      interval: e.interval,
      timeStamp: e.timeStamp
    };
  }
</script>

</body>

</html>

